@using static portfolio_aro.Pages.Components.SimpleDialog
@inject IDialogService DialogService
<div style="text-align: -webkit-center;">
    <h3>Throughout the years I gained proficiency in multiple technogies </h3>
    <MudCarousel Style="height: 200px; width: 80%; background: white; border-radius: 100em; margin: 5% !important;" ShowArrows="true" ShowBullets="false" EnableSwipeGesture="true" AutoCycle="true" TData="object">
        <MudCarouselItem Transition="transition">
            <h2 class="carousel-title">Web Development Frameworks</h2>
            <div class="carousel-container">
                <img src="./assets/techno/logo-blazor.png" alt="logo-blazor" />
                <img src="./assets/techno/logo-angular.png" alt="logo-angular" />
                <img src="./assets/techno/logo-vuejs.png" alt="logo-vuejs" />
                <img src="./assets/techno/logo-symfony.png" alt="logo-symfony" />
            </div>
        </MudCarouselItem>
        <MudCarouselItem Transition="transition">
            <h2 class="carousel-title">Database</h2>
            <div class="carousel-container">
                <img src="./assets/techno/logo-mysql.svg" alt="logo-mysql" />
                <img src="./assets/techno/logo-mongodb.png" alt="logo-mongodb" />
                <img src="./assets/techno/logo-neo4j.png" alt="logo-neo4j" />
            </div>
        </MudCarouselItem>
        <MudCarouselItem Transition="transition">
            <h2 class="carousel-title">Programming Languages</h2>
            <div class="carousel-container">
                <img src="./assets/techno/logo-c.png" alt="logo-c" />
                <img src="./assets/techno/logo-csharp.png" alt="logo-csharp" />
                <img src="./assets/techno/logo-java.png" alt="logo-java" />
                <img src="./assets/techno/logo-python.png" alt="logo-python" />
            </div>
        </MudCarouselItem>
        <MudCarouselItem Transition="transition">
            <h2 class="carousel-title">3D & Game Development Tools</h2>
            <div class="carousel-container">
                <img src="./assets/techno/logo-threejs.png" alt="logo-threejs" />
                <img src="./assets/techno/logo-unity.png" alt="logo-unity" />
                <img src="./assets/techno/logo-ue.png" alt="logo-ue" />
            </div>
        </MudCarouselItem>
        <MudCarouselItem Transition="transition">
            <h2 class="carousel-title">Backend Frameworks </h2>
            <div class="carousel-container">
                <img src="./assets/techno/logo-nodejs.png" alt="logo-nodejs" />
                <img src="./assets/techno/logo-spring.png" alt="logo-spring" />
            </div>
        </MudCarouselItem>
    </MudCarousel>
</div>
<div>
    <h3 style="    text-align: -webkit-center;">But I also developed multiple competences thanks to my studies</h3>
    <div style="display: flex;
    justify-content: space-around;
    margin-top: 5%;
    margin-bottom: 5%;">
        <button class="competence-button" @onclick="()=>OpenCompetenceDialog(developTitle, developContent, developProjects)">
            <span class="material-symbols-outlined">
                terminal
            </span>
            Develop
        </button>
        <button class="competence-button" @onclick="()=>OpenCompetenceDialog(optimizeTitle, optimizeContent, optimizeProjects)">
            <span class="material-symbols-outlined">
                speed
            </span>
            Optimize
        </button>
        <button class="competence-button" @onclick="()=>OpenCompetenceDialog(administerTitle, administerContent, administerProjects)">
            <span class="material-symbols-outlined">
                assignment
            </span>
            Administer
        </button>
        <button class="competence-button" @onclick="()=>OpenCompetenceDialog(manageTitle, manageContent, manageProjects)">
            <span class="material-symbols-outlined">
                groups
            </span>
            Manage
        </button>
        <button class="competence-button" @onclick="()=>OpenCompetenceDialog(collaborateTitle, collaborateContent, collaborateProjects)">
            <span class="material-symbols-outlined">
                supervisor_account
            </span>
            Lead
        </button>
        <button class="competence-button" @onclick="()=>OpenCompetenceDialog(collaborateTitle, collaborateContent, collaborateProjects)">
            <span class="material-symbols-outlined">
                partner_exchange
            </span>
            Collaborate
        </button>

    </div>
</div>
@code {
    private Transition transition = Transition.Slide;

    private string developTitle = "Develop";
    private string developContent = "Being able of creating, designing, coding, testing, and maintaining software applications, systems, or programs. This involves a series of activities that start with understanding the requirements, followed by writing and compiling code, debugging, and finally deploying the software.";
    private List<ProjectRelation> developProjects = new List<ProjectRelation>();

    private string optimizeTitle = "Optimize";
    private string optimizeContent = "Being able of improving the performance, efficiency, or effectiveness of a software system, algorithm, or code.";
    private List<ProjectRelation> optimizeProjects = new List<ProjectRelation>();

    private string administerTitle = "Administer";
    private string administerContent = "It is the management and oversight of computer systems, networks, databases, or software applications.";
    private List<ProjectRelation> administerProjects = new List<ProjectRelation>();
    private string manageTitle = "Manage";
    private string manageContent = "In computer science, managing involves overseeing and coordinating various aspects of IT systems, projects, or teams to ensure effective and efficient operation.";
    private List<ProjectRelation> manageProjects = new List<ProjectRelation>();
    private string leadTitle = "Lead";
    private string leadContent = "Leading involves guiding and influencing a team or project towards achieving goals, often by setting a vision, providing direction, and inspiring others.";
    private List<ProjectRelation> leadProjects = new List<ProjectRelation>();

    private string collaborateTitle = "Collaborate";
    private string collaborateContent = " Collaborating refers to working together with others—whether within a team or with external stakeholders—to achieve common goals, solve problems, or develop new solutions. ";
    private List<ProjectRelation> collaborateProjects = new List<ProjectRelation>();


    protected override void OnInitialized()
    {
        var developAnnuaire = new ProjectRelation() { projectName = "Phonebook", relation = "By being the first real software I developed it showed me the rope on programming" };
        var developGraphMap = new ProjectRelation() { projectName = "GraphMap", relation = "The project required developing an application capable of displaying and analyzing graphs, which involved significant coding and software design." };
        var developRenault = new ProjectRelation() { projectName = "Automotive Industry 4.0 Web Supervision Application", relation = "I was deeply involved in the development of the web application, focusing on creating a system that automated the kitting process in the automotive sector, integrating various data streams to optimize production." };

        developProjects.Add(developAnnuaire);
        developProjects.Add(developGraphMap);
        developProjects.Add(developRenault);

        var optimizeIsipick = new ProjectRelation() { projectName = "WCS Warehouse Order Management Application", relation = "I focused on optimizing the application's performance to handle complex transactions and high data volumes seamlessly, ensuring operational efficiency." };
        var optimizeKAS = new ProjectRelation() { projectName = "Automotive Industry 4.0 Web Supervision Application", relation = "I worked on enhancing the application's visualization and database querying capabilities to improve real-time performance and efficiency in production monitoring." };
        var optimizeNameVerification = new ProjectRelation() { projectName = "Name Verification API Development", relation = "I optimized the name verification API to ensure fast and accurate processing of large datasets, which was crucial for maintaining high system performance." };

        optimizeProjects.Add(optimizeIsipick);
        optimizeProjects.Add(optimizeKAS);
        optimizeProjects.Add(optimizeNameVerification);

        var administerPhonebook = new ProjectRelation() { projectName = "Phonebook", relation = "I managed the development environment, setting up version control and ensuring all tools and libraries were correctly configured for the project." };
        var administerSnake = new ProjectRelation() { projectName = "Snake Game", relation = "I handled the setup and maintenance of the game development environment, ensuring all dependencies were in place and configurations were optimized." };

        administerProjects.Add(administerPhonebook);
        administerProjects.Add(administerSnake);

        var managePhonebook = new ProjectRelation() { projectName = "Phonebook", relation = "I managed the project's timeline and coordinated tasks to ensure the software was developed on schedule and met the required specifications." };
        var manageSnake = new ProjectRelation() { projectName = "Snake Game", relation = "I oversaw the development process, managing team efforts and ensuring milestones were met while addressing any issues that arose during the project." };

        manageProjects.Add(managePhonebook);
        manageProjects.Add(manageSnake);


        var leadGraphMap = new ProjectRelation() { projectName = "GraphMap", relation = "I led the design and implementation of the application, making strategic decisions to ensure it met the project goals and client requirements." };
        var leadKAS = new ProjectRelation() { projectName = "Automotive Industry 4.0 Web Supervision Application", relation = "I took a leadership role in defining the technology used and making key decisions to align the application with our objectives and client needs." };

        leadProjects.Add(leadGraphMap);
        leadProjects.Add(leadKAS);

        var collaboratePhonebook = new ProjectRelation() { projectName = "Phonebook", relation = "I collaborated closely with my peers to integrate feedback and ensure all functionalities were implemented according to the project requirements." };
        var collaborateSnake = new ProjectRelation() { projectName = "Snake Game", relation = "Teamwork was essential as I worked with other developers to integrate features and resolve bugs, ensuring a smooth development process." };
        var collaborateKAS = new ProjectRelation() { projectName = "Automotive Industry 4.0 Web Supervision Application", relation = "Collaboration with various stakeholders was key to align on project goals and ensure the system components were well-integrated." };

        collaborateProjects.Add(collaboratePhonebook);
        collaborateProjects.Add(collaborateSnake);
        collaborateProjects.Add(collaborateKAS);
    }

    private async Task OpenCompetenceDialog(string title, string content, List<ProjectRelation> projects)
    {
        var parameters = new DialogParameters<Components.SimpleDialog> { { dialog => dialog.Title, title }, { dialog => dialog.Content, content }, { dialog => dialog.Projects, projects } };
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.Medium, FullWidth = true };
        await DialogService.ShowAsync<Components.SimpleDialog>("Empty", parameters, options);
    }

}


<style>
    .carousel-container {
        display: flex;
        justify-content: space-evenly;
        height: 100%;
        padding: 1%;
    }

        .carousel-container img {
            height: 75px;
        }

    .carousel-title {
        background: #b7e5e5;
        color: white;
    }

    h2 {
        text-align: center;
        padding: 2%;
    }

    .competence-button {
        padding: 0.5em;
        font-size: xx-large;
        flex-direction: column;
    }

    .competence-button {
        --bg: #000;
        --hover-bg: #ffffff;
        --hover-text: #000;
        --bg-color: #fdfdf7;
        color: #2b2b2b;
        cursor: pointer;
        border: 1px solid var(--bg);
        border-radius: 4px;
        background: var(--bg);
        background-color: var(--bg-color);
        transition: 0.2s;
    }

        .competence-button:hover {
            color: var(--hover-text);
            transform: translate(-0.25rem, -0.25rem);
            background: var(--hover-bg);
            box-shadow: 0.25rem 0.25rem var(--bg);
        }

        .competence-button:active {
            transform: translate(0);
            box-shadow: none;
        }

</style>
